"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[131],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=u(t),f=o,b=m["".concat(c,".").concat(f)]||m[f]||p[f]||a;return t?r.createElement(b,s(s({ref:n},l),{},{components:t})):r.createElement(b,s({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2141:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},assets:function(){return l},toc:function(){return p},default:function(){return f}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={slug:"github-action",title:"github action",authors:{name:"chasen"},tags:["ci","deploy"]},c=void 0,u={permalink:"/blog/github-action",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/blog/blog/2020-12-17-first-blog-post.md",source:"@site/blog/2020-12-17-first-blog-post.md",title:"github action",description:"eg1.",date:"2020-12-17T00:00:00.000Z",formattedDate:"December 17, 2020",tags:[{label:"ci",permalink:"/blog/tags/ci"},{label:"deploy",permalink:"/blog/tags/deploy"}],readingTime:.94,truncated:!1,authors:[{name:"chasen"}]},l={authorsImageUrls:[void 0]},p=[],m={toc:p};function f(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"eg1."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"name: WEBSITE DEPLOY CI\non:\n  push:\n    branches:\n      - main \n      - feature-1.0\n    paths-ignore:\n      - README.md\n      - LICENSE\n \njobs:\n  deploy_job:\n    runs-on: ubuntu-latest\n    name: build\n    steps:\n      # check out the repository\n      - name: Checkout    \n        uses: actions/checkout@v2\n \n      - name: Install Dependencies\n        run: yarn\n      - name: Build\n        run: yarn build\n \n      - name: deploy file to test server\n        if: github.ref == 'refs/heads/feature-1.0'\n        uses: wlixcc/SFTP-Deploy-Action@v1.0 \n        with:  \n          username: '${{secrets.YOUR_WEBSITE_USER}}'\n          server: '${{ secrets.YOUR_WEBSITE_SERVER_IP }}'\n          ssh_private_key: ${{ secrets.YOUR_WEBSITE_PAGES_DEPLOY }}\n          local_path: './build/*'\n          remote_path: ${{ secrets.YOUR_WEBSITE_REMOTE_PATH_DEV }}\n \n      - name: deploy file to prod server\n        if: github.ref == 'refs/heads/main'\n        uses: wlixcc/SFTP-Deploy-Action@v1.0 \n        with:  \n          username: '${{secrets.YOUR_WEBSITE_USER}}'\n          server: '${{ secrets.YOUR_WEBSITE_SERVER_IP }}'\n          ssh_private_key: ${{ secrets.YOUR_WEBSITE_PAGES_DEPLOY }}\n          local_path: './build/*'\n          remote_path: ${{ secrets.YOUR_WEBSITE_REMOTE_PATH_PROD }}\n")),(0,a.kt)("p",null,"eg2."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"name: DEPLOY CI - push to another rpo\non:\n  push:\n    branches:\n      - master\n    paths-ignore:\n      - README.md\n      - LICENSE\n \njobs:\n  deploy_job:\n    runs-on: ubuntu-latest\n    name: build\n    steps:\n      # check out the repository\n      - name: Checkout    \n        uses: actions/checkout@v2\n \n      - name: Install Dependencies\n        run: yarn\n      - name: Build\n        run: yarn build\n      \n \n      - name: Pushes to another repository\n        uses: cpina/github-action-push-to-another-repository@main\n        env:\n          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}\n        with:\n          source-directory: 'build'\n          destination-github-username:  ${{ secrets.DESTINATION_GITHUB_NAME }}\n          destination-repository-name: 'zzzzz'\n          target-directory: 'xxxx'\n          user-email: ${{ secrets.UESR_EMAIL }}\n          target-branch: gh-pages\n")))}f.isMDXComponent=!0}}]);